// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getBlockConfigFromTypeScript official blocks action-button 1`] = `
{
  "actions": {
    "onClick": {
      "description": "Action that gets dispatched when the button is clicked.",
    },
  },
  "events": undefined,
  "messages": undefined,
  "parameters": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": {
      "icon": {
        "description": "A [Font Awesome icon](https://fontawesome.com/icons?m=free) name to render on the button.",
        "format": "fontawesome",
        "type": "string",
      },
      "title": {
        "description": "The title for the button.

Describe what the button does. This helps with accessibility for people using screen readers.",
        "format": "remapper",
      },
    },
    "required": [
      "icon",
    ],
    "type": "object",
  },
}
`;

exports[`getBlockConfigFromTypeScript official blocks audio 1`] = `
{
  "actions": undefined,
  "events": {
    "emit": undefined,
    "listen": {
      "onAudio": {
        "description": "The event to listen on for new data.

The result must be either a audio URL or an object containing a property \`url\`.",
      },
      "stop": {
        "description": "The event to stop listening to audio.",
      },
    },
  },
  "messages": undefined,
  "parameters": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "properties": {
      "src": {
        "description": "The source of the player. This can either be a URL pointing to a website, or it can point to an asset. The asset can either be the object, or the ID of the asset",
        "format": "remapper",
      },
    },
    "type": "object",
  },
}
`;

exports[`getBlockConfigFromTypeScript official blocks button-list 1`] = `
{
  "actions": {
    "$any": {
      "description": "A custom action that gets dispatched when a button is clicked that has the same click action
specified as the name of this action.",
    },
    "onClick": {
      "description": "Action that gets dispatched when a button is clicked that doesn’t specify its own click
action.",
    },
  },
  "events": {
    "emit": undefined,
    "listen": {
      "data": {
        "description": "The event that is triggered when data is received.

This data can be used with remap to display labels dynamically based on the received data.",
      },
    },
  },
  "messages": undefined,
  "parameters": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
      "BulmaColor": {
        "description": "A color known to Bulma.",
        "enum": [
          "danger",
          "dark",
          "info",
          "link",
          "primary",
          "success",
          "warning",
          "white",
        ],
        "type": "string",
      },
      "BulmaSize": {
        "enum": [
          "large",
          "medium",
          "normal",
          "small",
        ],
        "type": "string",
      },
      "Button": {
        "additionalProperties": false,
        "properties": {
          "color": {
            "$ref": "#/definitions/BulmaColor",
            "description": "The Bulma color to use.",
          },
          "fullwidth": {
            "description": "Whether the button should be full width or not.

By default buttons only take up as much space as needed.",
            "type": "boolean",
          },
          "icon": {
            "description": "A [Font Awesome icon](https://fontawesome.com/icons?m=free) name to render on the button.

Will not render if undefined.",
            "format": "fontawesome",
            "type": "string",
          },
          "inverted": {
            "description": "Whether the text and background colors should be inverted.",
            "type": "boolean",
          },
          "label": {
            "description": "The label to display.

Will not render if undefined.",
            "format": "remapper",
          },
          "light": {
            "description": "When set to true, the ‘light’ set of Bulma colors are used.",
            "type": "boolean",
          },
          "onClick": {
            "description": "The name of the action to trigger when the button is clicked.",
            "format": "action",
            "type": "string",
          },
          "outlined": {
            "description": "Whether the button should display its colors in